{% include 'header' %}

import ViperMcFlurryX

class {{ prefix }}{{ module_info.name }}Router: {{ prefix }}{{ module_info.name }}RouterInput {

    weak var calleeOutput: (RamblerViperModuleOutput /* Add supported protocols here, e.g: & AnotherModuleOutput */)!
    weak var transitionHandler: RamblerViperModuleTransitionHandlerProtocol!

    /*  // Example
    func dismiss() {
        transitionHandler.closeCurrentModule!(true)
    }
    */

    /* // Example
    func showSomeModule() {
        transitionHandler.openModule!(usingFactory: SomeModuleConfigurator()) { (sourceModuleTransitionHandler, destinationModuleTransitionHandler) in
            
            let sourceViewController = sourceModuleTransitionHandler as! UIViewController
            let destinationViewController = destinationModuleTransitionHandler as! UIViewController
            
            sourceViewController.present(destinationViewController, animated: true, completion: nil)
            
            }.thenChain { (moduleInput) -> RamblerViperModuleOutput? in
                (moduleInput as! SomeModuleInput).configure()
                return self.calleeOutput
        }
    }
    */

}
