{% include 'header' %}

import {% if custom_parameters.mcflurry_swift %}ViperMcFlurryX_Swift{% else %}ViperMcFlurryX{% endif %}

class {{ prefix }}{{ module_info.name }}Router: {{ prefix }}{{ module_info.name }}RouterInput {

    // MARK: - VIPER Vars

    weak var calleeOutput: ({% if custom_parameters.mcflurry_swift != "true" %}Rambler{% endif %}ViperModuleOutput /* Add supported protocols here, e.g: & AnotherModuleOutput */)!
    weak var transitionHandler: {% if custom_parameters.mcflurry_swift != "true" %}Rambler{% endif %}ViperModuleTransitionHandler{% if custom_parameters.mcflurry_swift != "true" %}Protocol{% endif %}!

    // MARK: - {{ prefix }}{{ module_info.name }}RouterInput

    func embedSomeModule() {
        {% if custom_parameters.mcflurry_swift == 'true' %}
        transitionHandler.openModuleUsingSegue("EmbedSomeModuleSegue").thenChainUsingBlock { (module) -> ViperModuleOutput? in
        {% else %}
        transitionHandler.openModule!(usingSegue: "EmbedSomeModuleSegue").thenChain { (module) -> RamblerViperModuleOutput? in
        {% endif %}
            let module = module as! SomeModuleInput
            module.configure()
            return nil // or self.calleeOutput
        }
    }

    /*  // Example
    func dismiss() {
        transitionHandler.closeCurrentModule{% if custom_parameters.mcflurry_swift != "true" %}!{% endif %}(true)
    }
    */

    /* // Example
    func showSomeModule() {

        {% if custom_parameters.mcflurry_swift == 'true' %}
        transitionHandler.openModuleUsingFactory(SomeModuleConfigurator()) { (sourceModuleTransitionHandler, destinationModuleTransitionHandler) in
        {% else %}
        transitionHandler.openModule!(usingFactory: SomeModuleConfigurator()) { (sourceModuleTransitionHandler, destinationModuleTransitionHandler) in
        {% endif %}

            let sourceViewController = sourceModuleTransitionHandler as! UIViewController
            let destinationViewController = destinationModuleTransitionHandler as! UIViewController

            sourceViewController.present(destinationViewController, animated: true, completion: nil)
        {% if custom_parameters.mcflurry_swift == 'true' %}
        }.thenChainUsingBlock { (moduleInput) -> ViperModuleOutput? in
        {% else %}
        }.thenChain { (moduleInput) -> RamblerViperModuleOutput? in
        {% endif %}        
            (moduleInput as! SomeModuleInput).configure()
            return nil // or self.calleeOutput
        }
    }
    */

    // MARK: - Helpers
    // TODO: Place your code here

}
