{% include 'header' %}

import ViperMcFlurryX

class {{ prefix }}{{ module_info.name }}Router: {{ prefix }}{{ module_info.name }}RouterInput {

    // MARK: - VIPER Vars

    weak var calleeOutput: (RamblerViperModuleOutput /* Add supported protocols here, e.g: & AnotherModuleOutput */)!
    weak var transitionHandler: RamblerViperModuleTransitionHandlerProtocol!

    // MARK: - {{ prefix }}{{ module_info.name }}RouterInput

    func embedSomeModule() {
        transitionHandler.openModule!(usingSegue: "EmbedSomeModuleSegue").thenChain { (module) -> RamblerViperModuleOutput? in
            let module = module as! SomeModuleInput
            module.configure()
            return nil // or self.calleeOutput
        }
    }

    /*  // Example
    func dismiss() {
        transitionHandler.closeCurrentModule!(true)
    }
    */

    /* // Example
    func showSomeModule() {
        transitionHandler.openModule!(usingFactory: SomeModuleConfigurator()) { (sourceModuleTransitionHandler, destinationModuleTransitionHandler) in

            let sourceViewController = sourceModuleTransitionHandler as! UIViewController
            let destinationViewController = destinationModuleTransitionHandler as! UIViewController

            sourceViewController.present(destinationViewController, animated: true, completion: nil)

        }.thenChain { (moduleInput) -> RamblerViperModuleOutput? in
            (moduleInput as! SomeModuleInput).configure()
            return nil // or self.calleeOutput
        }
    }
    */

    // MARK: - Helpers
    // TODO: Place your code here

}
