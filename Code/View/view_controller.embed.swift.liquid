{% include 'header' %}

import UIKit
import {% if custom_parameters.mcflurry_swift == 'true' %}ViperMcFlurryX_Swift{% else %}RamblerSegues{% endif %}

class {{ prefix }}{{ module_info.name }}ViewController: UIViewController, {% if custom_parameters.mcflurry_swift == "true" %}EmbedSegueContainerViewProvider{% else %}RamblerEmbedSegueViewContainer{% endif %}, {{ prefix }}{{module_info.name}}ViewInput {

    // MARK: - VIPER Vars

    var output: {{ prefix }}{{ module_info.name }}ViewOutput!

    // MARK: - Outlets
    // TODO: Place your code here

    // see https://github.com/rambler-digital-solutions/RamblerSegues
    @IBOutlet weak var embedSomeModuleSegueContainer: UIView!

    // MARK: - Vars
    // TODO: Place your code here

    // MARK: - Life cycle

    override func viewDidLoad() {
        super.viewDidLoad()
        output.viewIsReady()
    }

    // MARK: - {{ prefix }}{{module_info.name}}ViewInput
    // TODO: Place your code here

    // MARK: - UI Actions
    // TODO: Place your code here

    // MARK: - {% if custom_parameters.mcflurry_swift == "true" %}EmbedSegueContainerViewProvider{% else %}RamblerEmbedSegueViewContainer{% endif %}

    {% if custom_parameters.mcflurry_swift == 'true' %}func containerViewForSegue(_ identifier: String) -> UIView?{% else %}func view(forEmbedIdentifier identifier: String!) -> UIView!{% endif %} {
        switch identifier {
        // see https://github.com/rambler-digital-solutions/RamblerSegues
        case "EmbedSomeModuleSegue":
            return self.embedSomeModuleSegueContainer
        default:
            return nil
        }
    }

    // MARK: - Helpers
    // TODO: Place your code here
}
