{% include 'header' %}

import UIKit

class {{ prefix }}{{ module_info.name }}ViewCell: UITableViewCell {

    // MARK: - Outlets
    // TODO: Place your code here

    // MARK: - Vars

    private final var removeEmbeddableBlock: {{ prefix }}{{ module_info.name }}EmbeddableRemoveBlock?
    private final var context: {{ prefix }}{{ module_info.name }}ViewCellContext?

    // MARK: - Public

    func configure(with model: {{ prefix }}{{ module_info.name }}ModuleEntityModel, in context: {{ prefix }}{{ module_info.name }}ViewCellContext) {
        self.context = context
        // TODO: Place your code here
    }

    func willDisplay(_ embeddable: {{ prefix }}{{ module_info.name }}Embeddable) {
        removeEmbeddable() // remove previous if for some reason it was not removed
        removeEmbeddableBlock = embeddable.embed(contentView) // TODO use view you prefer
    }

    func stopDisplay() {
        removeEmbeddable()
    }

    // MARK: - Life cycle

    deinit {
        removeEmbeddable()
    }

    override func prepareForReuse() {
        removeEmbeddable()
        super.prepareForReuse()
    }

    // MARK: - Helpers

    private func removeEmbeddable() {
        removeEmbeddableBlock?()
        removeEmbeddableBlock = nil
    }

    // TODO: Place your code here

}
