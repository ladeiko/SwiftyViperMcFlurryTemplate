{% include 'header' %}

import SwiftUI

typealias {{ prefix }}{{ module_info.name }}ViewController = {{ prefix }}{{ module_info.name }}ViewControllerImpl<{{ prefix }}{{ module_info.name }}RootView>
typealias {{ prefix }}{{ module_info.name }}ViewControllerConfigureBlock = () -> Void

class {{ prefix }}{{ module_info.name }}ViewControllerImpl<Content>: UIHostingController<Content>, {{ prefix }}{{module_info.name}}ViewInput where Content : {{ prefix }}{{ module_info.name }}RootViewProtocol {

    // MARK: - VIPER Vars

    var output: {{ prefix }}{{ module_info.name }}ViewOutput!

    // MARK: - Vars
    // TODO: Place your code here

    // MARK: - Life cycle

    @objc required dynamic init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder, rootView: {{ prefix }}{{ module_info.name }}RootView())
    }

    init() {
        super.init(rootView: {{ prefix }}{{ module_info.name }}RootView())
    }

    // MARK: - {{ prefix }}{{module_info.name}}ViewInput
    
    func configure(with theme: {{ prefix }}{{ module_info.name }}ViewInputTheme) {
        // TODO: Place your code here
    }

    // MARK: - Helpers
    // TODO: Place your code here
}

extension {{ prefix }}{{ module_info.name }}ViewControllerImpl {
    func prepare(_ configurationBlock: {{ prefix }}{{ module_info.name }}ViewControllerConfigureBlock) {
        configurationBlock()
        output.viewIsReady() // viewDidLoad is not called in UIHostingController
    }
}

extension {{ prefix }}{{ module_info.name }}ViewControllerImpl: {{ prefix }}{{ module_info.name }}RootViewDelegate {

    // MARK: - UI Actions
    // TODO: Place your code here

    func didTapOnSampleButton() {
        print("did tap on sample button")
        rootView.viewState.sampleValue += 1
    }

}